name: Deploy eShop Online

on:
  push:

jobs:

  #####################
  # Builds
  build-web:
    name: Build eShop Web
    uses: InsightDI/mrb-terraform-azure-net-gha/.github/workflows/dotnetcore.yml@mrb/initial
    with:
      artifact-name: Web
      project-file: Web.csproj
      project-path: app/src/Web
  build-api:
    name: Build eShop API
    uses: InsightDI/mrb-terraform-azure-net-gha/.github/workflows/dotnetcore.yml@mrb/initial
    with:
      artifact-name: PublicApi
      project-file: PublicApi.csproj
      project-path: app/src/PublicApi
  
  #####################
  # Provision Infrastructure
  dev-provision-infra:
    name: Provision eShop Infrastructure - DEV
    uses: InsightDI/mrb-terraform-azure-net-gha/.github/workflows/terraform.yml@mrb/initial
    with:
      env: dev
      tf-path: infra/terraform
    secrets:
      TF_API_TOKEN: ${{ secrets.TF_API_TOKEN }}
  dev-provision-infra-outputs:
    needs: dev-provision-infra
    name: Provision eShop Infrastructure [Outputs] - DEV
    uses: InsightDI/mrb-terraform-azure-net-gha/.github/workflows/terraform-outputs.yml@mrb/initial
    with:
      env: dev
      tf-path: infra/terraform
      output-vars: |
        echo ::set-output name=resource_group_id::$(terraform output -json resource_group_id | tr -d '"')
        echo ::set-output name=app_service_hostname::$(terraform output -json app_service_hostname | tr -d '"')
        echo ::set-output name=eshop_web_service::$(terraform output -json eshop_web_service | tr -d '"')
        echo ::set-output name=eshop_api::$(terraform output -json eshop_api | tr -d '"')
    secrets:
      TF_API_TOKEN: ${{ secrets.TF_API_TOKEN }}
  
  #####################
  # Deploy Applications
  dev-deploy-web:
    needs: [dev-provision-infra-outputs, dev-provision-infra, build-web]
    name: Azure App Service Deploy - eShop Web - DEV
    uses: InsightDI/mrb-terraform-azure-net-gha/.github/workflows/azurerm-deploy.yml@mrb/initial
    with:
      app-name: ${{ needs.dev-provision-infra-outputs.outputs.eshop_web_service }}
      env: dev
      package-name: Web
    secrets:
      AZURE_CREDENTIALS: ${{ secrets.AZURE_CREDENTIALS }}
  dev-deploy-api:
    needs: [dev-provision-infra-outputs, dev-provision-infra, build-api]
    name: Azure App Service Deploy - eShop API - DEV
    uses: InsightDI/mrb-terraform-azure-net-gha/.github/workflows/azurerm-deploy.yml@mrb/initial
    with:
      app-name: ${{ needs.dev-provision-infra-outputs.outputs.eshop_api }}
      env: dev
      package-name: PublicApi
    secrets:
      AZURE_CREDENTIALS: ${{ secrets.AZURE_CREDENTIALS }}

    
    
    
    
    
    
    
    
    
    
    
    
    
    # needs: dev-provision-infra-outputs
    # name: "Deploy eShop Web - DEV"
    # runs-on: ubuntu-latest
    # steps:
    # - run: |
    #     echo ${{ needs.dev-provision-infra-outputs.outputs.resource_group_id }}
    #     echo ${{ needs.dev-provision-infra-outputs.outputs.app_service_hostname }}
#   deploy-test:
#     needs: deploy-dev 
#     uses: hca-ccoe/demo-tfc-workflow/.github/workflows/terraform.yml@development/update-workflows
#     with:
#       env: test
#     secrets:
#       TF_API_TOKEN: ${{ secrets.TF_API_TOKEN }}
#   deploy-staging:
#     needs: deploy-test 
#     uses: hca-ccoe/demo-tfc-workflow/.github/workflows/terraform.yml@development/update-workflows
#     with:
#       env: staging
#     secrets:
#       TF_API_TOKEN: ${{ secrets.TF_API_TOKEN }}
#   deploy-prod:
#     needs: deploy-staging 
#     uses: hca-ccoe/demo-tfc-workflow/.github/workflows/terraform.yml@development/update-workflows
#     with:
#       env: prod
#     secrets:
#       TF_API_TOKEN: ${{ secrets.TF_API_TOKEN }}


# az ad sp create-for-rbac --name "github-sp-tf-demo" --role contributor --scopes "/subscriptions/1c6b2cdf-74c6-448e-b9c2-79db4106600b" --sdk-auth