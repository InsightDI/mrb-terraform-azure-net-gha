name: Simple CICD

on:
  push:

jobs:
  # build-api:
  #   uses: InsightDI/mrb-terraform-azure-net-gha/.github/workflows/dotnetcore.yml@mrb/initial
  #   with:
  #     artifact-name: Web
  #     project-file: Web.csproj
  #     project-path: app/src/Web
  # build-web:
  #   uses: InsightDI/mrb-terraform-azure-net-gha/.github/workflows/dotnetcore.yml@mrb/initial
  #   with:
  #     artifact-name: PublicApi
  #     project-file: PublicApi.csproj
  #     project-path: app/src/PublicApi
  deploy-dev:
    # needs: [build-api, build-web]
    uses: InsightDI/mrb-terraform-azure-net-gha/.github/workflows/terraform.yml@mrb/initial
    with:
      env: dev
      tf-path: infra/terraform
      output-vars: |
        echo ::set-output name=resource_group_id::$(terraform output -raw resource_group_id)
        echo ::set-output name=app_service_hostname::$(terraform output -raw app_service_hostname)
    secrets:
      TF_API_TOKEN: ${{ secrets.TF_API_TOKEN }}
#   deploy-test:
#     needs: deploy-dev 
#     uses: hca-ccoe/demo-tfc-workflow/.github/workflows/terraform.yml@development/update-workflows
#     with:
#       env: test
#     secrets:
#       TF_API_TOKEN: ${{ secrets.TF_API_TOKEN }}
#   deploy-staging:
#     needs: deploy-test 
#     uses: hca-ccoe/demo-tfc-workflow/.github/workflows/terraform.yml@development/update-workflows
#     with:
#       env: staging
#     secrets:
#       TF_API_TOKEN: ${{ secrets.TF_API_TOKEN }}
#   deploy-prod:
#     needs: deploy-staging 
#     uses: hca-ccoe/demo-tfc-workflow/.github/workflows/terraform.yml@development/update-workflows
#     with:
#       env: prod
#     secrets:
#       TF_API_TOKEN: ${{ secrets.TF_API_TOKEN }}
