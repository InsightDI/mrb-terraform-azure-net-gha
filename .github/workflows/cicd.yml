name: Simple CICD

on:
  push:

env:
  OUTPUT_VARS: |
    echo ::set-output name=resource_group_id::$(terraform output -raw resource_group_id)
    echo ::set-output name=app_service_hostname::$(terraform output -raw app_service_hostname)

jobs:
  # build-api:
  #   uses: InsightDI/mrb-terraform-azure-net-gha/.github/workflows/dotnetcore.yml@mrb/initial
  #   with:
  #     artifact-name: Web
  #     project-file: Web.csproj
  #     project-path: app/src/Web
  # build-web:
  #   uses: InsightDI/mrb-terraform-azure-net-gha/.github/workflows/dotnetcore.yml@mrb/initial
  #   with:
  #     artifact-name: PublicApi
  #     project-file: PublicApi.csproj
  #     project-path: app/src/PublicApi
  dev-provision-infra:
    # needs: [build-api, build-web]
    name: "Provision eShop Infrastructure - DEV"
    uses: InsightDI/mrb-terraform-azure-net-gha/.github/workflows/terraform.yml@mrb/initial
    with:
      env: dev
      tf-path: infra/terraform
    secrets:
      TF_API_TOKEN: ${{ secrets.TF_API_TOKEN }}
  dev-provision-infra-outputs:
    needs: dev-provision-infra
    name: "Provision eShop Infrastructure [Outputs] - DEV"
    uses: InsightDI/mrb-terraform-azure-net-gha/.github/workflows/terraform-outputs.yml@mrb/initial
    with:
      env: dev
      tf-path: infra/terraform
      output-vars: $OUTPUT_VARS
    secrets:
      TF_API_TOKEN: ${{ secrets.TF_API_TOKEN }}
  dev-deploy-web:
    needs: dev-provision-infra-outputs
    name: "Deploy eShop Web - DEV"
    runs-on: ubuntu-latest
    steps:
    - run: |
        echo "${{ needs.dev-provision-infra-outputs.outputs.resource_group_id }}"
        echo "${{ needs.dev-provision-infra-outputs.outputs.app_service_hostname }}"
#   deploy-test:
#     needs: deploy-dev 
#     uses: hca-ccoe/demo-tfc-workflow/.github/workflows/terraform.yml@development/update-workflows
#     with:
#       env: test
#     secrets:
#       TF_API_TOKEN: ${{ secrets.TF_API_TOKEN }}
#   deploy-staging:
#     needs: deploy-test 
#     uses: hca-ccoe/demo-tfc-workflow/.github/workflows/terraform.yml@development/update-workflows
#     with:
#       env: staging
#     secrets:
#       TF_API_TOKEN: ${{ secrets.TF_API_TOKEN }}
#   deploy-prod:
#     needs: deploy-staging 
#     uses: hca-ccoe/demo-tfc-workflow/.github/workflows/terraform.yml@development/update-workflows
#     with:
#       env: prod
#     secrets:
#       TF_API_TOKEN: ${{ secrets.TF_API_TOKEN }}
